
// –§—É–Ω–∫—Ü–∏–∏

// ### –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ü–∏—Ñ—Ä –∏ –±—É–∫–≤
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ª–æ–≤–æ, –∞ –≤ –æ—Ç–≤–µ—Ç –≤—ã–¥–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ - –º–∞—Å—Å–∏–≤ –±—É–∫–≤, –∏ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ —ç—Ç–æ–º —Å–ª–æ–≤–µ

// const massLetters = [];
// const massDigits  = [];
// function arrLettersOrDigits(arrayMy) {
//
//     for (const item of arrayMy) {
//         if (typeof item == 'number') {
//             massDigits.push(item);
//             } else if (typeof item == 'string') {
//             massLetters.push(item)
//         }
//     }
//     return(massLetters, massDigits)
// }
// arrLettersOrDigits(['a', 5, 8, 's', 98, '879'])
// console.log('–ú–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª: ', massDigits);
// console.log('–ú–∞—Å—Å–∏–≤ –±—É–∫–≤: ', massLetters)

// ### –¢–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—Ä–æ–∫–∏
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ - –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ —á–∏—Å–ª–æ. –ò –≤ –æ—Ç–≤–µ—Ç –≤—ã–¥–∞–µ—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ —Ç–µ
// —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–ª–∏–Ω–∞ –∫–æ—Ä–æ—á–µ, —á–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ

// const arrNew = ['strange', 'new', 'array', 'once', 'one']
// const arrNew1 = []
// function arrOfStrings (arrMy, n) {
//     for (let i = 0; i < arrMy.length; i++) {
//         if (arrMy[i].length < n) {
//             arrNew1.push(arrMy[i])
//         }
//     }
//     return arrNew1
//
// }
// const abc = arrOfStrings(arrNew, 4)
// console.log(abc)

// - –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –æ–Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–ª–∞ –∫—Ä–∏—Ç–µ—Ä–∏–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - –±–æ–ª—å—à–µ/–º–µ–Ω—å—à–µ. –¢–æ –µ—Å—Ç—å –∏–º–µ–ª–∞ —Ç—Ä–µ—Ç–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä,
// –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–±–æ—Ç–∞–ª–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ ‚Äú–±–æ–ª—å—à–µ‚Äù –∏–ª–∏ ‚Äú–º–µ–Ω—å—à–µ‚Äù

// const arrNew = ['strange', 'new', 'array', 'once', 'one']
// const arrNew1 = []
// function greatOrNot(n, lengthOfArr) {
//     return n > lengthOfArr
// }
//
// function arrOfStrings (arrMy, n) {
//     for (let i = 0; i < arrMy.length; i++) {
//         if (greatOrNot(n, arrMy[i].length)) {
//             arrNew1.push(arrMy[i])
//         }
//     }
//
//     return arrNew1
//
// }
// const abc = arrOfStrings(arrNew, 4)
// console.log(abc)


// - –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—É–Ω–∫—Ç–∞, —á—Ç–æ–±—ã –ø–∞—Ä–∞–º–µ—Ç—Ä –±—ã–ª –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–±–æ—Ç–∞–ª–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ‚Äú–º–µ–Ω—å—à–µ‚Äù

// const arrNew = ['strange', 'new', 'array', 'once', 'one']
// const arrNew1 = []
// function greatOrNot(n?: digit, lengthOfArr) {
//     const xN = n ?? 4;
//     return xN < lengthOfArr
// }
//
// function arrOfStrings (arrMy, n) {
//     for (let i = 0; i < arrMy.length; i++) {
//         if (greatOrNot(n, arrMy[i].length)) {
//             arrNew1.push(arrMy[i])
//         }
//     }
//
//     return arrNew1
//
// }
// const abc = arrOfStrings(arrNew, 4)
// console.log(abc)



// ### –ù–∞–∏–±–æ–ª—å—à–∏–π –¥–µ–ª–∏—Ç–µ–ª—å
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞–∏–±–æ–ª—å—à–∏–π –¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞.
//
//     üí° –ù–∞–∏–±–æ–ª—å—à–∏–º –¥–µ–ª–∏—Ç–µ–ª–µ–º –¥–ª—è —á–∏—Å–ª–∞ A –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ A –¥–µ–ª–∏—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —Å–∞–º–æ —á–∏—Å–ª–æ A. –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è —á–∏—Å–ª–∞ 18 –Ω–∞–∏–±–æ–ª—å—à–∏–º –¥–µ–ª–∏—Ç–µ–ª–µ–º —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ 9
//
// ### –°—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π –æ–±—ä–µ–∫—Ç–∞
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏ –≤—ã–¥–∞–µ—Ç —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π –µ–≥–æ –ø–æ–ª–µ–π. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤ –æ–±—ä–µ–∫—Ç–µ –±—É–¥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.
// const newItem = {
//     item1: 12,
//     item2: 3,
//     item3: 8
// };
// let newMass = [];
// let summ = 0;
// function sumArr (massive) {
//     let newMass = Object.values(massive);
//     for (const eachItem of newMass) {
//         summ += eachItem;
//     }
// return summ
// }
// console.log(sumArr(newItem));
//
//   –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é. –¢–µ–ø–µ—Ä—å –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —á—Ç–æ —É –æ–±—ä–µ–∫—Ç–∞ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞. –¢–µ–ø–µ—Ä—å –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –µ—â—ë –∏
//   null, undefined, string, boolean. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å—É–º–º—É —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤

// const newItem = {
//     item1: 12,
//     item2: 3,
//     item3: 8,
//     item4: 'Ivan',
//     item5: 10
// };
// let newMass = [];
// let summ = 0;
// function sumArr (massive) {
//     let newMass = Object.values(massive);
//     for (const eachItem of newMass) {
//         if (typeof eachItem == 'number') {
//             summ += eachItem;
//         }
//     }
// return summ
// }
// console.log(sumArr(newItem));


// ### –í–æ–∑—Ä–∞—Å—Ç –°—Ç–∞—Å–∞
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤. –ò—â–µ—Ç –æ–±—ä–µ–∫—Ç, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è `name` —Ä–∞–≤–Ω–æ `Stas` –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è `age`  —É —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞. –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Ä–Ω—É—Ç—å ‚Äú–û–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–∞–π–¥–µ–Ω, –Ω–æ –ø–æ–ª–µ `age` —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏—è `null` –∏–ª–∏ `undefined`, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Ä–Ω—É—Ç—å ‚Äú–í–æ–∑—Ä–∞—Å—Ç–∞ –Ω–µ—Ç‚Äù.
//


// const elenaBer = {
//     name: 'Elena',
//     age: 36
// };
//
// const stasIvanov = {
//     name: 'Stas',
//     age: 28
// };
//
// const arrName = [elenaBer, stasIvanov];
// let stasAge = 0;
// function arrNames(arr) {
//     let newMass = Object.values(arr);
//     for (const eachItem of newMass) {
//         if (eachItem.name == 'Stas') {
//              stasAge = eachItem.age;
//         }
//     }
//     return stasAge
// }
// console.log(arrNames(arrName))

// ### –ö–æ–ª–±—ç–∫
//
// –ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±—É—é –æ—Å–º—ã—Å–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ª—é–±—ã—Ö –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞.
// –í–Ω—É—Ç—Ä–∏ —Å –ø–æ–º–æ—â—å—é Math.random —Ä–∞–Ω–¥–æ–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äú—É—Å–ø–µ—Ö/–Ω–µ—É—Å–ø–µ—Ö‚Äù, –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–æ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–ª–±—ç–∫.
//
// function funcSuccess() {
//     console.log('–£—Å–ø–µ—Ö!')
// };
// function funcFail() {
//     console.log('–ù–µ—É–¥–∞—á–∞!')
// }
// function failOrSuccess(funcSuccess, funcFail) {
//     const succesOrFail = Math.random();
//
//     if (succesOrFail >= 0.5) {
//         funcSuccess();
//         console.log(succesOrFail)
//     } else {
//         funcFail();
//         console.log(succesOrFail)
//     }
// }
// console.log(failOrSuccess(funcSuccess,funcFail))
// // ### –ë–∏–ª–¥–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã —ç—Ç–æ—Ç –∫–æ–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–ª
//
//
// const sayHi = sayBuilder('Hi');
// const sayBye = sayBuilder('Bye');
//
// console.log(sayHi('Ruslan')); // Hi, Ruslan!
// console.log(sayHi('Maxim')); // Hi, Maxim!
//
// console.log(sayBye('Ruslan')); // Bye, Ruslan!
// console.log(sayBye('Maxim')); // Bye, Maxim!
//
//!!!!–Ω–µ –∑–Ω–∞—é
// function sayHiBuilder(name) {
//     const s = 'Hi'
//     return s
// };
// function sayByeBuilder() {
//     const s = 'Bye'
//     return s
// }
//
// function sayBuilder (hiOrBye) {
//     if (hiOrBye == 'Bye') {
//          sayByeBuilder()
//     } else if (hiOrBye == 'Hi') {
//          sayHiBuilder()
//     }
// }
//
// const sayHi = sayBuilder('Hi');
// const sayBye = sayBuilder('Bye');
//
// console.log(sayHi('Ruslan')); // Hi, Ruslan!
// console.log(sayHi('Maxim')); // Hi, Maxim!
//
// console.log(sayBye('Ruslan')); // Bye, Ruslan!
// console.log(sayBye('Maxim')); // Bye, Maxim!

//
// ### –§–∏–±–±–æ–Ω–∞—á–∏
//
// –†—è–¥ —Ñ–∏–±–±–æ–Ω–∞—á–∏ - —á–∏—Å–ª–æ–≤–æ–π —Ä—è–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–≤—É—Ö –µ–¥–∏–Ω–∏—Ü, –∏ –¥–∞–ª–µ–µ –∫–∞–∂–¥–æ–µ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö:
//
// 1, 1, 2, 3, 5, 8, 13, 21, 34
//
// –¢–æ –µ—Å—Ç—å:
//
//     - 2 = 1 + 1
//     - 3 = 2 + 1
//     - 5 = 3 + 2
//     - 8 = 5 + 3
//     - 13 = 8 + 5
//         - –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ —ç—Ç–æ–π –ø–æ—Å–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä
//
// fib(1); // 1
// fib(2); // 1
// fib(3); // 2
// fib(4); // 3
// fib(5); // 5
// fib(6); // 8
// fib(7); // 13
// fib(8); // 21
// fib(9); // 34

// let first = 0;
// function fibonacci(digit) {
//     if (digit == 1) {
//         return digit;
//     } else if (digit == 0) {
//         return digit;
//     } else {
//         return (fibonacci(digit-2) + fibonacci(digit-1));
//     }
//
// };
//
// console.log(fibonacci(1));
// console.log(fibonacci(2));
// console.log(fibonacci(3));
// console.log(fibonacci(4));
// console.log(fibonacci(5));
// console.log(fibonacci(6));
// console.log(fibonacci(7));
// console.log(fibonacci(8));
// console.log(fibonacci(9));

//
// ### –°–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (—Å–ª–æ–∂–Ω–æ–µ –∏–ª–∏ –Ω–µ—Å–ª–æ–∂–Ω–æ–µ - –Ω–µ–≤–∞–∂–Ω–æ). –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Ç—Ä–∏—Ü—É (–º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥—Ä—É–≥–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤),
// –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –µ—ë –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
//     –ù–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–∞ –º–∞—Ç—Ä–∏—Ü–∞ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–æ—Ç —Ç–∞–∫, –∫–∞–∫ –Ω–∏–∂–µ. –ù–∞ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –ø–æ–∑–∏—Ü–∏—è—Ö –≤ –∫–∞–∂–¥–æ–º –º–∞—Å—Å–∏–≤–µ –ª–µ–∂–∞—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ `multiply`, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–Ω–æ–∂–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã. –ù–∞ —Ç—Ä–µ—Ç—å–µ–π –ø–æ–∑–∏—Ü–∏–∏ –≤ –º–∞—Å—Å–∏–≤–µ –ª–µ–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å –µ—ë —Å —Ç–∞–∫–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏.
//     –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≥–æ–Ω–∏—Ç –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∫–∞–∂–¥—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
//
// const array = [
// 	[1, 9, 9],
// 	[2, 3, 6],
// 	[5, 5, 25],
// 	[8, 3, 24],
// 	[0, 0, 0]
// ];
//
// const multiply = (a: number, b: number) => a * b;
//
//!!! –Ω–µ –∑–Ω–∞—é
// function summ(b, c) {
//     let a = b + c;
//     return a
// }
// const array = [
//     [1, 9, 10],
//     [2, 3, 5],
//     [5, 5, 10],
//     [8, 3, 11],
//     [0, 0, 0]
// ];
// function arrSum(array) {
//     for (let i = 0; i < array[i].length; i++) {
//         for (const it of array[i]) {
//             if (summ(array[0], array[1]) == array[0] + array[1]) {
//                 return console.log(summ(array[0], array[1]), ' ok')
//             } else {
//                 return console.log(summ(array[0], array[1]), ' not ok')
//             }
//         }
//     }
// }
// console.log(arrSum(array))

// - –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ (–µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è), —Å–æ–∑–¥–∞–π—Ç–µ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞ –≤—Ö–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é (–∫–æ–ª–±–µ–∫), –∏ –º–∞—Å—Å–∏–≤ –¥–ª—è –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –æ–∂–∏–¥–∞–µ–º—ã–º
//
// ### –®–∏—Ñ—Ä
//
// –§—Ä–∞–∑–∞
//
// the quick brown fox jumps over the lazy dog
//
// —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –±—É–∫–≤—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞.
//
//     –Ø —Å–æ–∑–¥–∞–ª —Å–≤–æ–π –∞–ª—Ñ–∞–≤–∏—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ—â–∞–µ—Ç –æ–¥–Ω–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã –¥—Ä—É–≥–∏–º–∏. –í–æ—Ç —Ç–∞ –∂–µ —Å–∞–º–∞—è —Ñ—Ä–∞–∑–∞, –Ω–æ –∑–∞–ø–∏—Å–∞–Ω–Ω–∞—è —Å –ø–æ–º–æ—â—å—é –Ω–æ–≤–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞:
//
// sgd pthbj aqnvm enw itlor nudq sgd kzyx cnf
//
// –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –±—É–∫–≤–∞ `t` –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ `s`, –±—É–∫–≤–∞ `h` –Ω–∞ `g` –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
//
//     –°–æ–∑–¥–∞–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –±—É–∫–≤—ã –æ–±—ã—á–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –∏ –±—É–∫–≤—ã –º–æ–µ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞.
//
//     –ò—Å–ø–æ–ª—å–∑—É—è —Å–ª–æ–≤–∞—Ä—å, —Ä–∞—Å—à–∏—Ñ—Ä—É–π—Ç–µ —Ñ—Ä–∞–∑—É
//
// xnt gzud lzjhmf fqdzs oqnfqdrr hm kdzqmhmf izuzrbqhos
//!!! –Ω–µ –∑–Ω–∞—é
// const arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
// let newArr = [];
// for (const i in arr) {
//     newArr
// }
// let newString = 'xnt gzud lzjhmf fqdzs oqnfqdrr hm kdzqmhmf izuzrbqhos'



//
// ## ‚ö†Ô∏èSMS‚õîÔ∏è
//
// ### –ü—Ä–µ–¥–∏—Å–ª–æ–≤–∏–µ
//
// –ó–∞–¥–∞—á–∞ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π.
//
//     –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é, —á—Ç–æ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —è–≤–ª—è–µ—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π, —á–µ–º –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥. –ï—ë —Ä–µ—à–µ–Ω–∏–µ –∑–∞–Ω—è–ª–æ —É –º–µ–Ω—è –æ–∫–æ–ª–æ –ø–æ–ª—É—á–∞—Å–∞, –∏ –ø–æ—Ç–æ–º –µ—â—ë —Å—Ç–æ–ª—å–∫–æ –∂–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å —á—Ç–æ–±—ã –ø—Ä–∏—á–µ—Å–∞—Ç—å –∫–æ–¥ –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ —á–∏—Ç–∞–µ–º—ã–º.
//
//     –ö–æ–Ω–µ—á–Ω–æ –∂–µ, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ—à–µ–Ω–∏—è –≤–∞–º –º–æ–∂–µ—Ç –ø–æ–≤–µ–∑—Ç–∏ –∏ –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –≤—ã–±—Ä–∞—Ç—å –≤–µ—Ä–Ω—ã–π –ø—É—Ç—å –∏ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –±–µ–∑ –ø—Ä–æ–±–ª–µ–º, –Ω–æ –ª–∏—á–Ω–æ —É –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å 3–≥–æ —Ä–∞–∑–∞)
//
// –¢–∞–∫ —á—Ç–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è.
//
// ### –£—Å–ª–æ–≤–∏–µ
//
// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –°–ú–° —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏.
//
//     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –º–æ–∂–µ—Ç –≤–ø–∏—Å–∞—Ç—å –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –æ–∫–æ—à–∫–µ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–≥–æ —Å–º—Å —Å–æ–æ–±—â–µ–Ω–∏—è.
//
//     –ü—Ä–∏ —ç—Ç–æ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ —Å–º—Å —Å–æ–æ–±—â–µ–Ω–∏—è - 70 —Å–∏–º–≤–æ–ª–æ–≤, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç —ç—Ç–æ—Ç –ª–∏–º–∏—Ç, —Ç–æ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–æ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∏ —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å –∏—Ö –≤–º–µ—Å—Ç–µ, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è 3 —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞, –ø–æ—ç—Ç–æ–º—É, –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - 67.
//
// –í–æ—Ç –ø—Ä–∏–º–µ—Ä –º–∞–∫–µ—Ç–∞.
//
// ![mhMULUz6U4U.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/589f56be-77b3-4a75-aec7-379cc5ea8a11/ecf23c98-0a89-45c7-8330-87db69b12f10/mhMULUz6U4U.jpg)
//
// –í —ç—Ç–æ–º –æ–∫–æ—à–∫–µ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ —É –Ω–µ–≥–æ –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (–æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫—Ä–∞—Å–Ω–æ–π –ø–æ–ª–æ—Å—ã, –æ–Ω–∞ –∫–∞–∫ —Ä–∞–∑ —ç—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç).
//
// ### –ó–∞–¥–∞—á–∞
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π. –ù–∞–ø–æ–º–Ω—é, –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º—É–º –º–æ–∂–µ—Ç –±—ã—Ç—å 70 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–æ –ø—Ä–∏ –±–æ–ª—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –º–∞–∫—Å–∏–º—É–º 67 —Å–∏–º–≤–æ–ª–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å, —Ç–∞–∫ –∫–∞–∫ 3 —Å–∏–º–≤–æ–ª–∞ –±—É–¥—É—Ç —Å–ª—É–∂–µ–±–Ω—ã–º–∏ –¥–ª—è —Å–≤—è–∑–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–¥–Ω–æ.
//
//     –ü—Ä–∏–º–µ—Ä—ã:
//
// | –í—Ö–æ–¥ | –í—ã—Ö–æ–¥: –ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π | –í—ã—Ö–æ–¥: –ö–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ |
// | --- | --- | --- |
// | 0 | 1 | 0 |
// | 55 | 1 | 55 |
// | 70 | 1 | 70 |
// | 71 | 2 | 4 (–ø–µ—Ä–≤–æ–µ 67/67, –≤—Ç–æ—Ä–æ–µ 4/67) |
// | 130 | 2 | 63 (–ø–µ—Ä–≤–æ–µ 67/67, –≤—Ç–æ—Ä–æ–µ 63/67) |
// | 134 | 2 | 67 (–ø–µ—Ä–≤–æ–µ 67/67, –≤—Ç–æ—Ä–æ–µ 67/67) |
// | 135 | 2 | 1 (67/67, 67/67, 1/67) |
// | 670 | 10 | 67 (–¥–µ—Å—è—Ç—å ‚Äú–ø–æ–ª–Ω—ã—Ö‚Äù —Å–æ–æ–±—â–µ–Ω–∏–π 67/67) |
//
// ### –£—Å–ª–æ–∂–Ω–µ–Ω–∏–µ
//
// –ï—Å–ª–∏ –≤—ã —á–∏—Ç–∞–ª–∏ –º–∞–∫–µ—Ç, —Ç–æ –º–æ–≥–ª–∏ —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–æ–ª-–≤—É —Å–∏–º–≤–æ–ª–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —è–∑—ã–∫–æ–º, –ø–æ—ç—Ç–æ–º—É –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ—Ä–∞–±–∞—Ç—å –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–≤—É–º—è —è–∑—ã–∫–∞–º–∏, —è–∑—ã–∫ –º–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ boolean –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–æ –µ—Å—Ç—å ‚Äú–∫–∏—Ä–∏–ª–ª–∏—Ü–∞‚Äù - ‚Äú–¥–∞‚Äù –∏–ª–∏ ‚Äú–Ω–µ—Ç‚Äù.

//–ö–æ–¥ —Ä–µ–≤—å—é
//!!! –Ω–µ –º–æ–≥—É —Ç–æ—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ Intellij Idea –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∏–ø–∏–∑–∞—Ü–∏—è TS
// type Program = {
//     name: string;
// };
//
// type Person = {
//     age?: number;
//     name?: string;
//     nicknames: string[]; //–Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞
//     programs: Program[]; //—Ç–∏–ø Program - –æ–±—ä–µ–∫—Ç, –∞ –Ω–µ –º–∞—Å—Å–∏–≤
// };
//
// const logProgramName = (object: Program): string => {
//     console.log(object.name);
// };
//
// const logPersonName = (object: Person): string => {
//     return object.name;
// };
//
// const p1: Program = { name: 'programmator' };
// const p2: Person = {
//     nicknames: [],
//     programs: [p1],
// };
//
// console.log(logProgramName(p1));
// console.log(logPersonName(p2));
//
// console.log(logProgramName(p1));
// console.log(logPersonName(p2));



//
// ### –ü–æ–∏—Å–∫ –≤ –º–∞—Å—Å–∏–≤–µ
//
// –î–∞–Ω –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è find, –Ω–∞–π–¥–∏—Ç–µ –æ–±—ä–µ–∫—Ç, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤ –ø–æ–ª–µ `age` –ª–µ–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª–µ–µ 10
//
// const arr = [
//     { name: 'aaa', age: 20 },
//     { name: 'bbb', age: 15 },
//     { name: 'ccc', age: 80 },
//     { name: 'ddd', age: 5 }
// ]
// const moreThan10 = arr.find((c) => c.age > 10);
// console.log(moreThan10)


// ### –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –≤ –º–∞—Å—Å–∏–≤–µ
//
// –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è. –¢–∏–ø—ã `any` –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ.
//
//–Ω–µ –∑–Ω–∞—é
// const storage = [
//   { age: 10, name: 'first' },
//   { age: 20, name: 'second' },
//   { age: 30, name: 'third' },
//   { age: 40, name: 'fourth' },
// ];
//
//  // const smartSearch = (arr: storage[], property: string, value: number | string) => {
//  const smartSearch = (arr, property, value) => {
//     const a = arr.filter(function (item) {
//          return (item.name === property, item.age === value);
//      })
// };


// const person1 = smartSearch(storage, 'age', 30);
// // { age: 30, name: 'third' }
// console.log(person1)
// const person2 = smartSearch(storage, 'age', 10);
// // { age: 10, name: 'first' }
// console.log(person2)
//
// const person3 = smartSearch(storage, 'name', 'second');
// // { age: 20, name: 'second' }
// console.log(person3)

//
// ### –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
//
// –°–æ–∑–¥–∞–π –ª—é–±–æ–π –º–∞—Å—Å–∏–≤ –∏ —Å –ø–æ–º–æ—â—å—é filter –≤–æ–∑—å–º–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ —Å–ª—É—á–∞–π–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Math.random())
//
//–Ω–µ –∑–Ω–∞—é
// const numbers = [-1, -5, 1, 2];
// let a = 0;
// const randomDigit = numbers.filter(function (randomDigit) {
//     for (let i = 0; i < numbers.length; i++) {
//         a = Math.round((Math.random() * 10));
//         if (i == a) {
//             return (randomDigit, a)
//         } else {
//             console.log('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞');
//             return  a
//         }
//     }
// })
// console.log(randomDigit, a)

// ### –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞
//
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∏–∂–µ?
// –≤—ã–≤–µ–¥–µ—Ç –º–∞—Å—Å–∏–≤ –±—É–ª–µ–∞–Ω, –Ω–æ –Ω–µ–ø–æ—è–Ω—Ç–Ω–æ, –ø–æ—á–µ–º—É - –≤–µ–¥—å map –∑–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—é
// const storage = [
//   { age: 10, name: 'first' },
//   { age: 20, name: 'second' },
//   { age: 30, name: 'third' },
//   { age: 40, name: 'fourth' },
// ];
//
// const smalls = storage.map((s) => s.age > 10);
//
// console.log(smalls);

//
// ### –û–±–æ–≥–∞—Ç–∏—Ç–µ —Å–ø–∏—Å–æ–∫
//
// –î–æ—Ä–∞–±–æ–π—Ç–∞ –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ `map` , —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è:
//
// const storage = [
//   { age: 10, name: 'first' },
//   { age: 20, name: 'second' },
//   { age: 30, name: 'third' },
//   { age: 40, name: 'fourth' },
// ];
//
// const storage2 = storage.map((person) => {
//   return {
//     age: person.name,
//     name: person.age,
//     reversed: true,
//   };
// });
//
// console.log(storage2);
/* –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:
[
  { age: 'first', name: 10, reversed: true },
  { age: 'second', name: 20, reversed: true },
  { age: 'third', name: 30, reversed: true },
  { age: 'fourth', name: 40, reversed: true }
]
*/

//
// ### –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
//
// –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é `indexOf`, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –∏–Ω–¥–µ–∫—Å –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ,
// –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏ —ç—Ç–æ–º –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–æ–∫ (include, indexOf –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ - –∑–∞–ø—Ä–µ—â–µ–Ω—ã). –¶–∏–∫–ª–æ–º –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ø–æ –≤—Å–µ–π —Å—Ç—Ä–æ–∫–µ –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –±—É–∫–≤—ã —Å –∏—Å–∫–æ–º—ã–º —Å–ª–æ–≤–æ–º.
//
//     –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π, –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ.
//
//     –ï—Å–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç, –≤—ã–≤–µ—Å—Ç–∏ -1
//
// const text = 'my example text';
//
// const word1 = indexOf('my', text); // 0
// const word2 = indexOf('mpl', text); // 6
// const word3 = indexOf('t', text); // 11
// const word4 = indexOf(' t', text); // 10
// const word5 = indexOf('my example text', text); // 0
// const word6 = indexOf('e ', text); // 9
// const word7 = indexOf('a ', text); // -1
// ```
// ### reduce
//
// –ò—Å–ø–æ–ª—å–∑—É—è reduce, –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è:
//
// - –§–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞
// - –§–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏
// - –°–æ–∑–¥–∞—ë—Ç –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
// - –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –º–∞—Å—Å–∏–≤ (—É –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–±—Ä–∞—Ç–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞)
// - –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –æ–±—ä–µ–∫—Ç:
//
//     ```tsx
//     const values = [10, 'just_name', true];
//     const myObject = values.reduce...
//     console.log(myObject);
//     // { 'key-1': 10, 'key-2': 'just_name', 'key-3': true }
//     ```
//
//     - –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –æ–±—ä–µ–∫—Ç. –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –∏ —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞
//
//     ```tsx
// const values =
//     [[1, 100], [2, 200], [3, 300], [1, 2], [3, 400], [4, 500], [1, 99]];
//
// const result = values.reduce...
// /*
// {
//   '1': { count: 3, sum: 201 },
//   '2': { count: 1, sum: 200 },
//   '3': { count: 2, sum: 700 },
//   '4': { count: 1, sum: 500 }
// }
// –û–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ:
// —á–∏—Å–ª–æ 1 –≤—Å—Ç—Ä–µ—Ç–∏–ª–æ—Å—å 3 —Ä–∞–∑–∞ - [1, 100], [1, 2] –∏ [1, 99] –∏ —Å—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π = 201 (100+2+99)
// —á–∏—Å–ª–æ 2 –≤—Å—Ç—Ä–µ—Ç–∏–ª–æ—Å—å 1 —Ä–∞–∑ - [2, 200] –∏ —Å—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π 200
// —á–∏—Å–ª–æ 3 –≤—Å—Ç—Ä–µ—Ç–∏–ª–æ—Å—å 2 —Ä–∞–∑–∞ - [3, 300] –∏ [3, 400] –∏ —Å—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π 700
// —á–∏—Å–ª–æ 4 –≤—Å—Ç—Ä–µ—Ç–∏–ª–æ—Å—å 1 —Ä–∞–∑ - [4, 500] –∏ —Å—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π 500
//  */
//
// ```